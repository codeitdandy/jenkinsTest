<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="Client-PersonService-1.0-soapui-project" resourceRoot="" soapui-version="5.1.3" abortOnError="false" runType="SEQUENTIAL" id="efe0aa1f-2a44-41ee-b006-1bbb321d7454" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PersonServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/personservice/v1}PersonServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl" id="ed9c9566-ab71-4610-a99e-aa2b2583faec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.cxf.CXFAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Output Directory" value=""/>
  <con:entry key="Server" value="false"/>
  <con:entry key="EXSH" value="false"/>
  <con:entry key="DNS" value="true"/>
  <con:entry key="Class Folder" value=""/>
  <con:entry key="WSDL" value="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"/>
  <con:entry key="Output Packages" value="&lt;xml-fragment/>"/>
  <con:entry key="Compile" value="false"/>
  <con:entry key="Bindings" value=""/>
  <con:entry key="Implementation" value="false"/>
  <con:entry key="Catalog" value=""/>
  <con:entry key="Use cached WSDL" value="true"/>
  <con:entry key="Exclude namespaces" value="&lt;xml-fragment/>"/>
  <con:entry key="DEX" value="true"/>
  <con:entry key="All Code" value="false"/>
  <con:entry key="build.xml" value="false"/>
  <con:entry key="Validate WSDL" value="false"/>
  <con:entry key="Java Args" value=""/>
  <con:entry key="Package" value=""/>
  <con:entry key="Client" value="false"/>
  <con:entry key="Tool Args" value=""/>
</xml-fragment>]]></con:setting></con:settings>
    
    <con:definitionCache type="TEXT" rootPart="file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl"><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/PersonService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/personservice/v1" name="PersonService" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mes="http://fidus.brussels/service/personservice/messages/v1" xmlns:tns="http://fidus.brussels/service/personservice/v1">
  <xsd:annotation>
    <xsd:documentation>Person service WDSL v1.</xsd:documentation>
  </xsd:annotation>
  <wsdl:types>
    <xsd:schema targetNamespace="http://fidus.brussels/service/personservice/v1" elementFormDefault="qualified">
      <xsd:import namespace="http://fidus.brussels/service/personservice/messages/v1" schemaLocation="messages/personServiceMessages_v1.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="searchPersonByAddressRequestMessage">
    <wsdl:part name="SearchPersonByAddressRequest" element="mes:searchPersonByAddressRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonByAddressResponseMessage">
    <wsdl:part name="SearchPersonByAddressResponse" element="mes:searchPersonByAddressResponse"/>
  </wsdl:message>
  <wsdl:message name="getIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getIdentityResponse"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyRequestMessage">
    <wsdl:part name="SearchPersonPhoneticallyRequest" element="mes:searchPersonPhoneticallyRequest"/>
  </wsdl:message>
  <wsdl:message name="searchPersonPhoneticallyResponseMessage">
    <wsdl:part name="SearchPersonPhoneticallyResponse" element="mes:searchPersonPhoneticallyResponse"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityRequestMessage">
    <wsdl:part name="GetIdentityRequest" element="mes:getCBSSIdentityRequest"/>
  </wsdl:message>
  <wsdl:message name="getCBSSIdentityResponseMessage">
    <wsdl:part name="GetIdentityResponse" element="mes:getCBSSIdentityResponse"/>
  </wsdl:message>
  <wsdl:portType name="PersonServicePortType">
    <wsdl:operation name="searchPersonByAddress">
      <wsdl:input message="tns:searchPersonByAddressRequestMessage"/>
      <wsdl:output message="tns:searchPersonByAddressResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <wsdl:input message="tns:getIdentityRequestMessage"/>
      <wsdl:output message="tns:getIdentityResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <wsdl:input message="tns:searchPersonPhoneticallyRequestMessage"/>
      <wsdl:output message="tns:searchPersonPhoneticallyResponseMessage"/>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <wsdl:input message="tns:getCBSSIdentityRequestMessage"/>
      <wsdl:output message="tns:getCBSSIdentityResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PersonServiceHTTPBinding" type="tns:PersonServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="searchPersonByAddress">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPersonPhonetically">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCBSSIdentity">
      <soap:operation soapAction="http://fidus.brussels/services/personservice/getCBSSIdentity"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PersonService_v1">
    <wsdl:port name="PersonService_v1" binding="tns:PersonServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/personservice/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/personServiceMessages_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/service/personservice/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:tns="http://fidus.brussels/service/personservice/messages/v1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:per="http://kszbcss.fgov.be/types/legaldata/person/v3" xmlns:periss="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xsd:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../person/common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../person/legaldata/BaseLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/person/v3" schemaLocation="../person/legaldata/person/PersonLegalDataV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" schemaLocation="../person/legaldata/person/PersonIssLegalDataV3.xsd"/>
  <xsd:simpleType name="GivenNameMatchingType">
    <xsd:annotation>
      <xsd:documentation>Type defining the possible ways to interpret the given firstnames during the phonetic search.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="FIRST_LETTER_FIRST_GIVENNAME"/>
      <xsd:enumeration value="COMPLETE_FIRST_GIVENNAME"/>
      <xsd:enumeration value="ALL_GIVENNAME"/>
      <xsd:enumeration value="IGNORE_GIVENNAME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PersonByAddressRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given address information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="postalCode" type="base:PostalCodeType" form="unqualified"/>
      <xsd:element name="streetCode" type="base:StreetCodeType" form="unqualified"/>
      <xsd:element name="houseNumber" type="base:HouseNumberType" form="unqualified"/>
      <xsd:element name="houseIndex" type="base:HouseIndexType" minOccurs="0" form="unqualified"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IdentityRequestType">
    <xsd:annotation>
      <xsd:documentation>The person whose information is requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="personNumber" type="cme:PersonNumberType" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The basic identifier of a person is his personNumber.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonPhoneticallyRequestType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the request to search for persons based on the given phonetical name information.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="lastName" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1"/>
                  <xsd:maxLength value="48"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="givenName" type="base:GivenNameType" minOccurs="0" maxOccurs="3" form="unqualified"/>
            <xsd:element name="givenNameMatching" type="tns:GivenNameMatchingType" form="unqualified">
              <xsd:annotation>
                <xsd:documentation>Element specifying the behavior of the searchPersonPhonetically capability.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="birthDate" type="common:IncompleteDateType" form="unqualified"/>
            <xsd:element name="variation" minOccurs="0" form="unqualified">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:maxInclusive value="99"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0" form="unqualified">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="genderCode" type="base:GenderCodeType" form="unqualified"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="maximumResultCount" minOccurs="0" form="unqualified">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="50"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonByAddressRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:PersonPhoneticallyRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityRequestType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xsd:element name="legalContext" type="cme:LegalContextType"/>
      <xsd:element name="request" type="tns:IdentityRequestType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Request getIdentity definition-->
  <xsd:complexType name="SearchPersonByAddressResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SearchPersonPhoneticallyResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:ResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="GetCBSSIdentityResponseType">
    <xsd:sequence>
      <xsd:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xsd:element name="responses" type="tns:IssResponsesType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Technical errors that occur when processing the message context e.g. insufficient rights.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponsesType">
    <xsd:sequence>
      <xsd:element name="response" type="tns:IssResponseType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="per:PersonResponseType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="IssResponseType">
    <xsd:sequence>
      <xsd:element name="person" type="periss:PersonResponseType" minOccurs="0"/>
      <xsd:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Business exceptions that occur when processing the request or response e.g. missing data for a single response element.
						Exceptions at this level may contain back-end specific codes and content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Element of the request and the response-->
  <xsd:element name="searchPersonByAddressRequest" type="tns:SearchPersonByAddressRequestType"/>
  <xsd:element name="searchPersonByAddressResponse" type="tns:SearchPersonByAddressResponseType"/>
  <xsd:element name="getIdentityRequest" type="tns:GetIdentityRequestType"/>
  <xsd:element name="getIdentityResponse" type="tns:GetIdentityResponseType"/>
  <xsd:element name="searchPersonPhoneticallyRequest" type="tns:SearchPersonPhoneticallyRequestType"/>
  <xsd:element name="searchPersonPhoneticallyResponse" type="tns:SearchPersonPhoneticallyResponseType"/>
  <xsd:element name="getCBSSIdentityRequest" type="tns:GetCBSSIdentityRequestType"/>
  <xsd:element name="getCBSSIdentityResponse" type="tns:GetCBSSIdentityResponseType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/common/CommonV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: CommonV3.xsd
	* Author					: Johan Kumps - Peter Van den Bosch
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 25-03-2011
	* Description				: This XML schema document contains a set of Common XML  type definition and content model fragments for use in CBSS webservices and batch file schema definitions within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.1
	* Revision History		: 09-03-2011  	String2Type added
	*														LegalContext added
	*														DescriptionType refactored + lenght constraint 50 changed to 100
	*														InformationCustomerType.ticket length constraint 32 changed to 36
	*														LegalContext + IntegrationContext concepts added
	*														RuntimeFaultType refactored to CBSSFaultType
	*														Parameters added to BaseRequestType
	*                                18-10-2011 		removed String100Type 
   *                                         				Added InformationNotificationCBSS/InformationNotified
   *                                         				Increased the max number of occurences of Information in CBSSFaultType from 5 to 15
	*									25-10-2011	Refactored unbounded business errors to 25
	*														Refactored SSINType to SsinType
   *                          09-11-2011 Changed namespace to v3
   *                                         thorough validation leading to modifications: see CBSS common XSD types.doc
   *                           18-01-2011          informationNotified: identification renamed to notifiedIdentification (consistency)
   *                                                          CbeNumberType: changed from 9 or 10 digits, to mandatory 10 digits
  *                                                          added types for euro amounts, enterprise numbers and business unit numbers
 *                                                          Removed status and business anomalies from BaseResponseType, as the request fields should be copied in the same order in the response
*                                20-03-2012        Renamed BaseDescriptionType to DescriptionType, removed old DescriptionType
*                                                        Removed DescriptionStyleParametersType
*                                                        Removed RegisterCharacterSetType
*                                 29-05-2012           Really remove RegisterCharacterSetType
*								  14-11-2013		Added InformationCBSSBatchType
*								  04-09-2014		Added SenderReceiverType
*								  07-01-2015		Added SequenceNumberType
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/common/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/common/v3">
  <!--Request / response meta data-->
  <xsd:simpleType name="SeverityType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INFORMATION"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="FATAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="UUIDType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TicketType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="36"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CbeNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE number identifying an enterprise or business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EnterpriseNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE enterprise number (starting with 0 or 1)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-1]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BusinessUnitNumberType">
    <xsd:annotation>
      <xsd:documentation>CBE business unit number (starting with 2-8)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[2-8]\d{9}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SsinType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre National</xsd:documentation>
          <xsd:documentation xml:lang="NL">Rijksregister</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero Bis</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bis register : Bisnummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation xml:lang="FR">Registre Bis : numero TER</xsd:documentation>
          <xsd:documentation xml:lang="NL">Bisregister : Ternummer</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="IntegrationContextType">
    <xsd:annotation>
      <xsd:documentation>deprecated type. Use InscriptionContextType instead in new XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="InscriptionContextType">
    <xsd:annotation>
      <xsd:documentation>The way in which an organization knows a person (textual equivalent of former numerical quality code)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SequenceNumberType">
    <xsd:restriction base="xsd:long">
      <xsd:minInclusive value="1"/>
      <xsd:totalDigits value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="InformationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Information block from CBSS.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType"/>
      <xsd:element name="timestampReceive" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time request was received by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by CBSS.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCustomerType">
    <xsd:annotation>
      <xsd:documentation>Information block that can be used by the customer for diagnostic use.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Client can assign their own ticket reference for the request. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationSupplierType">
    <xsd:annotation>
      <xsd:documentation>Information block for supplier of a service</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReceive" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="supplierIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotificationCBSSType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for CBSS info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticketCBSS" type="tns:UUIDType">
        <xsd:annotation>
          <xsd:documentation>UUID generated by Customer or Supplier</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Time of request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationNotifiedType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs. Information block for partner info when CBSS notifies partner</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0"/>
      <xsd:element name="timestampReply" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="notifiedIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationCBSSBatchType">
    <xsd:annotation>
      <xsd:documentation>Deprecated type. Use SenderReceiverType in new batch XSDs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fileId" type="xsd:unsignedLong"/>
      <xsd:element name="fileCreationTimestamp" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SenderReceiverType">
    <xsd:annotation>
      <xsd:documentation>Information block containing info about the sender or receiver of a message.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ticket" type="tns:TicketType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The partner can assign a ticket reference to the message. Not mandatory.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestampSent" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when message was sent.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="organizationIdentification" type="tns:OrganizationIdentificationType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OrganizationIdentificationType">
    <xsd:choice>
      <xsd:element name="cbeNumber" type="tns:CbeNumberType"/>
      <xsd:sequence>
        <xsd:element name="sector">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="institution">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="999"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="OpenPeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an optional end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PeriodType">
    <xsd:annotation>
      <xsd:documentation>Period containining a begin date and an end date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="beginDate" type="xsd:date"/>
      <xsd:element name="endDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="IncompleteDateType">
    <xsd:annotation>
      <xsd:documentation>A possibly incomplete date. Format yyyy-mm-dd, yyyy-mm-00 or yyyy-00-00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="10"/>
      <xsd:whiteSpace value="collapse"/>
      <xsd:pattern value="[0-2][0-9]{3}\-[0-1][0-9]\-[0-3][0-9]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DescriptionType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LanguageType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the language of a given value</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NL"/>
      <xsd:enumeration value="FR"/>
      <xsd:enumeration value="DE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Errors and warnings structures-->
  <xsd:group name="BusinessAnomaliesContentFragment">
    <xsd:annotation>
      <xsd:documentation>Structure reporting business errors to the consumer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomalies" type="tns:BusinessAnomaliesType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="BusinessAnomaliesType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of the part of the response containing business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="businessAnomaly" type="tns:BusinessAnomalyType" maxOccurs="25"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BusinessAnomalyType">
    <xsd:annotation>
      <xsd:documentation>Type defining the structure of one business Faults</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique code referring to a description of this Fault</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="description">
        <xsd:annotation>
          <xsd:documentation>Some description of this Fault</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CBSSFaultType">
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType" minOccurs="0"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="detail" type="tns:MessageType" maxOccurs="30"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageType">
    <xsd:sequence>
      <xsd:element name="severity" type="tns:SeverityType"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="diagnostic">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="authorCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="InformationType">
    <xsd:sequence>
      <xsd:element name="fieldName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="64"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="fieldValue" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Base types for most common request/response format for consultation type operations. Can be used to define request and response types with extension type inheritance. Don't use if it doesn't fit the requirements.-->
  <xsd:complexType name="BaseRequestType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service requests</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType" minOccurs="0"/>
      <xsd:element name="legalContext" type="tns:LegalContextType">
        <xsd:annotation>
          <xsd:documentation>legal context under which the request was made</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BaseResponseType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Type defining the base structure for all service responses</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="informationCustomer" type="tns:InformationCustomerType"/>
      <xsd:element name="informationCBSS" type="tns:InformationCBSSType"/>
      <xsd:element name="legalContext" type="tns:LegalContextType"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--Commonly used status type for consultation type operations. Define another if it doesn't fit requirements.-->
  <xsd:complexType name="StatusType">
    <xsd:sequence>
      <xsd:element name="value">
        <xsd:annotation>
          <xsd:documentation>global status of the result</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="DATA_FOUND"/>
            <xsd:enumeration value="NO_DATA_FOUND"/>
            <xsd:enumeration value="NO_RESULT"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="code">
        <xsd:annotation>
          <xsd:documentation>the code of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="16"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="description" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the description of the status</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="256"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="information" type="tns:InformationType" minOccurs="0" maxOccurs="15"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="EuroPositiveAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EuroAmountType">
    <xsd:restriction base="xsd:decimal">
      <xsd:fractionDigits value="2"/>
      <xsd:maxExclusive value="1000000000000000"/>
      <xsd:minExclusive value="-1000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentPositiveAmountType">
    <xsd:restriction base="xsd:unsignedLong">
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EurocentAmountType">
    <xsd:restriction base="xsd:long">
      <xsd:minExclusive value="-100000000000000000"/>
      <xsd:maxExclusive value="100000000000000000"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/BaseLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: BaseLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.2
	* Revision History		: 09-03-2011  	ForeignAddressContentFragment now contains an optional foreignCityCode element.
    *														ForeignLocationContentFragment now contains an optional foreignCityCode element.
	*														ForeignAddressRequestContentFragment now contains an optional foreignCityCode element.
	*														ForeignLocationRequestContentFragment now contains an optional foreignCityCode element.
	*														AddressContentFragment/number + length 10 constraint
	*														AddressContentFragment/boxNumber + length 10 constraint
	*														CivilStateInfoContentFragment/civilStateCode length constraint 5 changed to 2 (Leading to incompatible change)
	*														NisCodeType + length 5 constraint (Leading to incompatible change)
	*														NobilityTitleContenctFragment added
	*														BirthInfoContentFragment extended with ActContentFragment
	*														ForeignLocationContentFragment added to CivilStateInfoContentFragment
	*														ForeignLocationContentFragment. length constraint 3 changed to 5
	*														foreignCityCode length constraint 10 changed to 5
	*														foreignCityName length constraint 50 changed to 100
	*														Refactored RegisterType to PersonType
	*														Refactored to use common:SSINType
	*														Removed SSINType
	*														GenderCode refactored from String1Type to GenderType
	*														Refactored to use common:IncompleteDateType
	*														Removed IncompleteDateType
	*														FamilyMember information removed
	*									25-10-2011	Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored firstname to givenName
	*									16-02-2012	New major version
	*									16-03-2012	Added a content fragment for temporary address
	*														Created AddressClassType
	*														DescriptionType in CommonV3 changed, no language anymore: added specific DescriptionType here with optional language
	*														Using CommonV3 DescriptionType for civilstate and nobilitytitle (adding a size constraint of 100)
	*									04-04-2012	Removed class attribute from address types
	*														Added new structure for diplomatic addresses and posts
	*									07-09-2012	Codes in LegalData now possible in three languages
	*												Removed act from BirthInfo 
	*									01-10-2012	gender in request renamed to genderCode
	*														Changed type for inceptionDate elements: now xsd:date
	*									08-11-2012	name/name in request and response renamed to name/lastName
	*									28-01-2013	New minor version 3.1
	*														Added optional diplomaticPostName
	*														Added switch for partnerSsin with new element partnerReference
	*														Added AdministratorContentFragment
	*									08-04-2014	New minor version 3.2:
	*														Added BirthActContentFragment and BirthActTypeCode
	*														Added birthAct to BirthInfoContentFragment
	*														Added LegalCohabitationGroup, SubregisterGroup, AbsenceGroup, FiliationGroup
	*														Added BirthGroup, DeceaseGroup, CivilStateGroup and NationalityGroup for consultation per datagroup
	*									08-10-2014	Added expiration details for LegalCohabitation
	*									08-10-2014	Extracted partner type from Civilstate and also used it in LegalCohabitation
	*									04-02-2015	Created DiplomaticAddressHistoryContentFragment with multiple postaddresses to use in ResidentialAddressHistoryContentFragment
	*									10-02-2015	Created PlainAddressHistoryType to reflect expiry dates for diplomatic addresses and post addresses
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.3.1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../common/CommonV3.xsd"/>
  <!--Response content fragments-->
  <xsd:group name="NameInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" type="tns:PartnerType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="SisOrIsiContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the social identification part of the person information</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="hasSocialIdentificationCard" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:group>
  <!--Request content fragments-->
  <xsd:group name="NameInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NameInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="lastName">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="givenName" type="tns:GivenNameType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the NationalityInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the DeceaseInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="GenderInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the GenderInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="genderCode" type="tns:GenderCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateInfoRequestContentFragment">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the CivilStateInfo part of the person information to be provided by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="partnerSsin" type="common:SsinType" minOccurs="0"/>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date"/>
      <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--General content fragments-->
  <xsd:group name="NobilityTitleContentFragment">
    <xsd:annotation>
      <xsd:documentation>Type describing the nobility title of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitleCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="2"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nobilityTitleDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="ResidentialAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="residentialAddress" type="tns:AddressHistoryType">
          <xsd:annotation>
            <xsd:documentation>Element containing all information comprised in the residential address datagroup of the found person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:group ref="tns:DiplomaticAddressHistoryContentFragment"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AdministratorContentFragment">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="location" type="tns:LocationType"/>
        <xsd:element name="specialNotion" type="tns:SpecialNotionType"/>
      </xsd:choice>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An optional post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DiplomaticAddressHistoryContentFragment">
    <xsd:sequence>
      <xsd:element name="diplomaticPost" type="tns:DiplomaticPostType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic post responsible for the diplomatic address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticAddress" type="tns:PlainAddressHistoryType">
        <xsd:annotation>
          <xsd:documentation>Diplomatic address of the found person</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postAddress" type="tns:PlainAddressHistoryType" minOccurs="0" maxOccurs="10">
        <xsd:annotation>
          <xsd:documentation>An optional list of post address of the found person.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="TemporaryAddressContentFragment">
    <xsd:sequence>
      <xsd:element name="temporaryAddress" type="tns:PlainAddressType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Datagroup content fragments-->
  <xsd:group name="SubregisterGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="subregisterCode" type="tns:NRSubregisterCodeType"/>
      <xsd:element name="subregisterDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="partner" type="tns:PartnerType"/>
      <xsd:element name="registration">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="registrationDate" type="xsd:date"/>
            <xsd:element name="location" type="tns:LocationType">
              <xsd:annotation>
                <xsd:documentation>Place where civil state was registered.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="registrationBailiff" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name="bailiffName">
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1"/>
                        <xsd:maxLength value="48"/>
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:element>
                  <xsd:element name="location" type="tns:LocationType" minOccurs="0">
                    <xsd:annotation>
                      <xsd:documentation>Place where civil state was registered.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="LegalCohabitationExpirationGroup">
    <xsd:sequence>
      <xsd:element name="expiryDate" type="xsd:date"/>
      <xsd:element name="reasonCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="99"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="reasonDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="location" type="tns:LocationType"/>
      <xsd:element name="notificationDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="FiliationGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filiationCode" type="tns:FiliationCodeType"/>
      <xsd:element name="filiationDescription" type="common:DescriptionType" minOccurs="0"/>
      <xsd:element name="parent" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="tns:ParentType">
              <xsd:attribute name="sequence" use="required">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:unsignedShort">
                    <xsd:maxInclusive value="3"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="48"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="AbsenceGroup">
    <xsd:annotation>
      <xsd:documentation>Information only available from the NR</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="absenceCode" type="tns:AbsenceCodeType"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="BirthGroup">
    <xsd:annotation>
      <xsd:documentation>Model fragment describing the BirthInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="birthDate" type="common:IncompleteDateType"/>
      <xsd:element name="birthPlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="DeceaseGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the DeceaseInfo information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deceaseDate" type="common:IncompleteDateType"/>
      <xsd:element name="deceasePlace" type="tns:LocationType" minOccurs="0"/>
      <xsd:element name="actType" type="tns:ActType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="CivilStateGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the CivilState information as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="civilStateCode" type="tns:CivilstateCodeType"/>
      <xsd:element name="civilStateDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="partner" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0">
              <xsd:element name="partnerSsin" type="common:SsinType"/>
              <xsd:element name="partnerReference">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="11"/>
                    <xsd:minLength value="1"/>
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:choice>
            <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
            <xsd:element name="partnerName" minOccurs="0">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="tns:NameInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="location" type="tns:LocationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Place where civil state was registered.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actNumber" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:group name="NationalityGroup">
    <xsd:annotation>
      <xsd:documentation>Model describing the NationalityInfo as a separate entity</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nationalityCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:unsignedShort">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="999"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="nationalityDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="justification" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="justificationCode">
              <xsd:simpleType>
                <xsd:restriction base="xsd:unsignedShort">
                  <xsd:minInclusive value="0"/>
                  <xsd:maxInclusive value="999"/>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="justificationDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <!--Types-->
  <xsd:simpleType name="GenderCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="M"/>
      <xsd:enumeration value="F"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CivilstateCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PersonRegisterType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="RR"/>
      <xsd:enumeration value="BIS"/>
      <xsd:enumeration value="RAD"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="NRSubregisterCodeType">
    <xsd:annotation>
      <xsd:documentation>Code specifying the subregister of the National Registry in which the person can be found</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SourceType">
    <xsd:annotation>
      <xsd:documentation>Type specifying the register which is the authentic source of the legal data of a person.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NR"/>
      <xsd:enumeration value="CBSS"/>
      <xsd:enumeration value="BOTH"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ActCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="FiliationCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="GivenNameValueType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="48"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="GivenNameType">
    <xsd:simpleContent>
      <xsd:extension base="tns:GivenNameValueType">
        <xsd:attribute name="sequence" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:unsignedShort">
              <xsd:maxInclusive value="3"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="PartnerType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="partnerSsin" type="common:SsinType"/>
        <xsd:element name="partnerReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="partnerBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="partnerName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ParentType">
    <xsd:sequence>
      <xsd:choice minOccurs="0">
        <xsd:element name="parentSsin" type="common:SsinType"/>
        <xsd:element name="parentReference">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="11"/>
              <xsd:minLength value="1"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="parentBirthDate" type="common:IncompleteDateType" minOccurs="0"/>
      <xsd:element name="parentGender" type="tns:GenderCodeType" minOccurs="0"/>
      <xsd:element name="parentName" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="tns:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>Type describing a Belgian location (BelgianMunicipality). Can be used as a birthplace or decease place.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" minOccurs="0">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ActType">
    <xsd:sequence>
      <xsd:element name="actTypeCode" type="tns:ActCodeType"/>
      <xsd:element name="actTypeDescription" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SpecialNotionType">
    <xsd:annotation>
      <xsd:documentation>Container for special NIS codes occurring in the information type 001</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specialNotionCode">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="5"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="specialNotionName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="PostalCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="StreetCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="HouseIndexType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="4"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="BoxNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="PlainAddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>the country of this address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="address" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>the actual address, in unformatted form</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PlainAddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:PlainAddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType"/>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="cityCode" type="tns:CityCodeType" minOccurs="0"/>
      <xsd:element name="cityName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="postalCode" type="tns:PostalCodeType" minOccurs="0"/>
      <xsd:element name="streetCode" type="tns:StreetCodeType" minOccurs="0"/>
      <xsd:element name="streetName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="houseNumber" type="tns:HouseNumberType" minOccurs="0"/>
      <xsd:element name="boxNumber" type="tns:BoxNumberType" minOccurs="0"/>
      <xsd:element name="inceptionDate" type="xsd:date" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="AddressHistoryType">
    <xsd:complexContent>
      <xsd:extension base="tns:AddressType">
        <xsd:sequence>
          <xsd:element name="expiryDate" type="xsd:date" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="DiplomaticPostType">
    <xsd:sequence>
      <xsd:element name="countryCode" type="tns:CountryCodeType">
        <xsd:annotation>
          <xsd:documentation>Country code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="countryName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
      <xsd:element name="diplomaticPostCode" type="tns:DiplomaticPostCodeType">
        <xsd:annotation>
          <xsd:documentation>The official code of the diplomatic post.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="diplomaticPostName" type="tns:DescriptionType" minOccurs="0" maxOccurs="3"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="CountryCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CityCodeType">
    <xsd:annotation>
      <xsd:documentation>For Belgian locations this is the "NISCode", for foreign locations the cityCode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DescriptionType">
    <xsd:annotation>
      <xsd:documentation>Type specifying how a value that can exist in several languages will be modelled</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="common:DescriptionType">
        <xsd:attribute name="language" type="common:LanguageType" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="DiplomaticPostCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AbsenceCodeType">
    <xsd:restriction base="xsd:unsignedShort">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DatagroupStatusType">
    <xsd:annotation>
      <xsd:documentation>Type defining possible statuses of a datagroup occurrence</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DATA_FOUND"/>
      <xsd:enumeration value="NO_DATA_FOUND"/>
      <xsd:enumeration value="NOT_SUPPORTED"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonLegalDataV3.xsd
	* Author					: Johan Kumps
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 31-05-2010
	* Last revision date	: 16-03-2012
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 09-03-2011  	NobilityTitleContentFragment added
	*														FamilyMembers datagroup removed
	*														PaymentAddress information removed
	*									25-10-2011	Refactored SSIN to camel case
	*														Refactored PersonType to PersonClassType
	*														Refactored person type to person class element
	*														Refactored unbounded NationalityInfo to 20
	*														Refactored unbounded CivilStateInfo to 20
	*									16-02-2012	New major version
	*									16-03-2012	Renamed residentialAddress to address
	*														Readded temporaryAddress
	*														CommonV3 BaseDescriptionType was renamed to DescriptionType
	*									07-09-2012	Removed subregister
	*									31-01-2013	added administrator
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/person/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/person/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/stijn/git/Fidus/personservice/PersonServiceRegistry/wsdl/personService/1.0.0/person/legaldata/person/PersonIssLegalDataV3.xsd</con:url><con:content><![CDATA[<!--edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by USER (KSZ-BCSS)-->
<!--====================================================================================================================================
	* File Name				: PersonIssLegalDatav3.xsd
	* Author					: Jonas De Meulenaere
	* Owner					: Crossroad Bank for Social Security (CBSS)
	* Domain					: CBSS Registries Public Services
	* Creation Date			: 04-04-2014
	* Description				: This XML schema document contains a set of XML types and content model fragments used to model legal person data within the CBSS domain. 
	* Status					: 
	* Current Version		: 3.0
	* Revision History		: 04-04-2014		Create PersonIssServiceV3 based on PersonServiceV3
	*
====================================================================================================================================-->
<xsd:schema targetNamespace="http://kszbcss.fgov.be/types/legaldata/personiss/v3" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="3.0beta1" xmlns:common="http://kszbcss.fgov.be/types/common/v3" xmlns:base="http://kszbcss.fgov.be/types/legaldata/v3" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://kszbcss.fgov.be/types/legaldata/personiss/v3">
  <xsd:import namespace="http://kszbcss.fgov.be/types/common/v3" schemaLocation="../../common/CommonV3.xsd"/>
  <xsd:import namespace="http://kszbcss.fgov.be/types/legaldata/v3" schemaLocation="../BaseLegalDataV3.xsd"/>
  <xsd:complexType name="PersonResponseType">
    <xsd:annotation>
      <xsd:documentation>Type encapsulating all legaldata of a person specific for the PersonService</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ssin" type="common:SsinType">
        <xsd:annotation>
          <xsd:documentation>The NR, BIS or RAD number of the found person (can be different from the ssin comprised in the request in case this ssin was replaced).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:group ref="tns:PersonLegalDataContentFragment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
        </xsd:annotation>
      </xsd:group>
    </xsd:sequence>
    <xsd:attribute name="register" type="base:PersonRegisterType">
      <xsd:annotation>
        <xsd:documentation>Element identifying the register which is the authentic source of the legal data of this person. Will always be present if PersonLegalDataContentFragment is present.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="registerInceptionDate" type="xsd:date">
      <xsd:annotation>
        <xsd:documentation>Date the person last entered the CBSS registries. Only present for BIS (creation date) and RAD (last RAD-in date) numbers</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:group name="PersonLegalDataContentFragment">
    <xsd:annotation>
      <xsd:documentation>Will not be returned if there was a problem fetching detailed information for the SSIN</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nobilityTitle" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NobilityTitleContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="name">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the name datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:NameInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="nationalities" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="nationality" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the nationality datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:group ref="base:NationalityInfoContentFragment"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="birth" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the birth datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:BirthGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="decease" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the decease datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:DeceaseInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="gender" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Element containing all information comprised in the gender datagroup of the found person</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:GenderInfoContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="civilStates" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="civilState" maxOccurs="20">
              <xsd:annotation>
                <xsd:documentation>Element containing all information comprised in the civilstate datagroup of the found person</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:group ref="base:CivilStateInfoContentFragment"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="address" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:ResidentialAddressContentFragment"/>
            <xsd:group ref="base:TemporaryAddressContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="administrator" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:AdministratorContentFragment"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="subregister" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:SubregisterGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="legalCohabitation" minOccurs="0">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:group ref="base:LegalCohabitationGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:group>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints>
      <con:endpoint>http://fidus.brussels/services/personservice/v1</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/getIdentity" name="getIdentity" bindingOperationName="getIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="37782446-c7cc-4124-8f9c-72d13d0b07ca">
      <con:settings/>
      
      
      <con:call name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="9b354218-971c-4b4b-8b73-48b42e188d6f">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      
      
      <con:call name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST" id="d5ac1e83-c0e6-46a4-885b-5290d0b3e420">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="ce70dd41-8ecf-4c6c-9c8a-be3ca6af3724">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="43b3d025-e9f4-4351-9a95-94e4156ab666">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="8bccfa23-0ffe-433d-a652-0aa55ec1396a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG" id="0aeafd29-c76a-4088-b770-35105a8b95a7">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="de2a30e7-e01c-4003-bc10-c3c9a454408a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="048341fb-a47a-4523-9892-3e538ff632cc">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="40595e83-d1a6-451f-9f26-a02595b73ee4">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD" id="76a9e4ae-1fbd-4325-9a2e-c02f94b246fe">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="4054bf91-0a93-4f89-b218-9dfaecdb9b22" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="c4e865d2-e8c5-4d34-a176-68de5a8657e4" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="4c41d0e9-e341-481e-be8a-e3d5531309ca" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f426d497-7c8c-4af6-bf95-9b9fc01a8aeb" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="0c10432c-3cdd-46ff-b1f4-ac23fc29ea32" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonByAddress" name="searchPersonByAddress" bindingOperationName="searchPersonByAddress" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ce38a6c-7ad5-442c-9f54-12e2a45b5a22">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="dc5f8e0f-3abc-41ff-8408-488888ef65be">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1481</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="96e62530-b8b7-4d46-be40-914b252ca667" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4fdf64fb-d478-4164-823d-4ea01aa4d298" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="bd14dd5b-7781-4ee2-8ccf-62d39077335e" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="4cf18017-ee69-4750-af75-556f3f9fa371" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="9d2d20b2-ab33-4073-8388-b2b24e4b1e93" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="ce05d58f-458e-45a2-99bb-5464937162c5" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="fa9d8d9d-f74b-4016-9573-bc46c4c59f8f" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="e03ee615-c9c3-4ad0-be69-11f89a3cf25f" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="85a4ad10-d22b-4e61-9773-e8480aae2de9" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="dc958878-2705-405e-bdee-e2347006388b" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="57836cf7-beed-4cdd-9ebc-9edaa21f9b5f" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="1e9bd60d-d233-410e-8ac9-8b0e1b9730e1" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="2fcc253d-1c54-482f-a8ef-6ee76c88251c" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="d0d2467b-e44f-4d98-83c7-3445155531bc" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="104c0ba3-e4a4-4755-91f0-21300b23a57f" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8e24ca88-5589-43f7-b289-5f0143e1b3cb" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b3922a18-5965-4e81-9c0c-27b3d94b839c" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f2c46c4c-5ff9-411a-b5ed-080f4d259776" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonByAddress"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
    <con:operation isOneWay="false" action="http://fidus.brussels/services/personservice/searchPersonPhonetically" name="searchPersonPhonetically" bindingOperationName="searchPersonPhonetically" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="963fba3d-d71d-4af1-b0ec-fb7dea19318c">
      <con:settings/>
      <con:call name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV" id="ee0ebece-4826-4161-9fe7-a92fe233be58">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a9f1546e-50d6-49ff-97db-59f679b6e803" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="0eb96b84-438b-4b43-9b0e-364a4d879a4a" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="29cd5922-4b29-445e-9676-3bcb8a6a77f0" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.16:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="66e10986-5ba2-4be8-92e9-f244ee0db419" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.24.17:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="7774e707-8bb1-4aea-8d05-d31a1178f213" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="494189e7-d53f-4a37-b2ba-57c8cc4fbac6" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a0a75e53-d03d-4c37-a14e-ef1481a95b83" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="a1588266-1de2-4249-aa20-79ae3bb93dda" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="543512c3-c165-4d8a-a66f-4f258c4308bc" name="3 - Test - LB - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="3a0e7434-1658-489e-9ed3-44d5962510cd" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="b4b443cb-bc32-41d9-b03c-b3d11365f420" name="3 - Test - Worker2 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="6cd9199d-4fcb-4533-9737-50bec44c6c06" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
      <con:call id="8e4d5e0d-8b7f-4832-8583-7527b5b02192" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/>
        <con:wsrmConfig version="1.2"/>
      </con:call>
    <con:call id="e37aecba-4d68-420e-bdbd-0a0faa90d973" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="8a5e3e1a-d9ac-4d9a-b5fe-d4276360ade6" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="ac6a1bea-d396-4a81-9630-7c22f7380109" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="384d0ba2-46f8-4939-99c8-ab96a1587ad7" name="4 - Staging - Worker1New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.191:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call><con:call id="5b65ddc7-9fac-42d3-bff7-ef5085425add" name="4 - Staging - Worker2New - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.23.198:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials>
          <con:selectedAuthProfile>Basic</con:selectedAuthProfile>
          <con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes>
          <con:authType>Global HTTP Settings</con:authType>
        </con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/><con:wsrmConfig version="1.2"/></con:call></con:operation>
  <con:operation id="62c05a83-d23c-47d0-b80d-d1c266b592ee" isOneWay="false" action="http://fidus.brussels/services/personservice/getCBSSIdentity" name="getCBSSIdentity" bindingOperationName="getCBSSIdentity" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="a5058bf2-d7bb-446f-bc3a-b809dfe231e9" name="1 - Local - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://localhost:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="df9b33fb-4355-4094-bc45-27137afbba35" name="2 - Dev - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="bb7d46b8-7c28-4b77-ae75-3d0cd0f2e406" name="3 - Test - LB - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="63cc9021-a899-419e-80bf-9180c1c760cb" name="3 - Test - External - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="b197eb99-abf5-461b-a4b9-18077e3372a3" name="3 - Test - Worker1 - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.53:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="342c0435-a5db-4e15-bb4e-bfd6ec7c7c4a" name="3 - Test - Worker2 - Request" incomingWss="Inflow TEST" outgoingWss="Outflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.54:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="3046e077-915f-4f81-9a73-3560519dd410" name="2 - DevNew - Request" outgoingWss="Outflow DEV" incomingWss="Inflow DEV"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="90b593ff-1332-48cd-9046-fe59bc552700" name="3 - Test - Worker1New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.73:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="26e7ddef-3a32-4429-92d6-743cea5b69be" name="3 - Test - Worker2New - Request" outgoingWss="Outflow TEST" incomingWss="Inflow TEST"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.22.93:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="d68ab661-98c5-4d26-ae68-f4c20bc4d6b0" name="4 - Staging - External - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f9e84250-19fe-4cb9-8350-8c5d32c74ea2" name="4 - Staging - LB - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="39c84b0d-93b5-4525-aeb7-1a55c5852559" name="4 - Staging - Worker1 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="f0b54c0f-1afe-415e-a09e-8d41ae7a5338" name="4 - Staging - Worker2 - Request" outgoingWss="Outflow STAG" incomingWss="Inflow STAG"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="9fd4f6fb-a38b-4f6e-9ed0-87934b90163e" name="5 - Prod - External - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a963a5d2-9974-4f35-a69a-f0cd96fe8840" name="5 - Prod - LB - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="84cec9da-4f6d-49ff-b70b-b34d0f874e36" name="5 - Prod - Worker1 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call><con:call id="805cfaca-a109-463e-9126-950c7d41dd68" name="5 - Prod - Worker2 - Request" outgoingWss="Outflow PROD" incomingWss="Inflow PROD"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/personservice/getCBSSIdentity"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface>
  <con:interface xsi:type="con:WsdlInterface" id="a67c99d2-df9d-4acc-a0d6-3a3e0eb29dc6" wsaVersion="NONE" name="ReferenceDirServiceHTTPBinding" type="wsdl" bindingName="{http://fidus.brussels/service/referencedir/v1}ReferenceDirServiceHTTPBinding" soapVersion="1_1" anonymous="optional" definition="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl"><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/ReferenceDirectoryService_v1.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://fidus.brussels/service/referencedir/v1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mes="http://fidus.brussels/service/referencedir/messages/v1" xmlns:tns="http://fidus.brussels/service/referencedir/v1">
  <wsdl:types>
    <xs:schema targetNamespace="http://fidus.brussels/service/referencedir/v1" elementFormDefault="qualified">
      <xs:import namespace="http://fidus.brussels/service/referencedir/messages/v1" schemaLocation="messages/referenceDirMessages_v1.xsd"/>
      <xs:import schemaLocation="messages/faultTypes_v1.xsd"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="SubscribeRequestMessage">
    <wsdl:part name="SubscribeRequest" element="mes:subscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="SubscribeResponseMessage">
    <wsdl:part name="SubscribeResponse" element="mes:subscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeRequestMessage">
    <wsdl:part name="UnsubscribeRequest" element="mes:unsubscribeReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="UnsubscribeResponseMessage">
    <wsdl:part name="UnsubscribeResponse" element="mes:unsubscribeReferenceResponse"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageMessageId">
    <wsdl:part name="messageId" element="messageId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTransactionId">
    <wsdl:part name="transactionId" element="transactionId"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageTimestamp">
    <wsdl:part name="timestamp" element="timestamp"/>
  </wsdl:message>
  <wsdl:message name="FaultMessageError">
    <wsdl:part name="error" element="error"/>
  </wsdl:message>
  <wsdl:message name="GetServicesRequestMessage">
    <wsdl:part name="GetServicesRequest" element="mes:getServicesReferenceRequest"/>
  </wsdl:message>
  <wsdl:message name="GetServicesResponseMessage">
    <wsdl:part name="GetServicesResponse" element="mes:getServicesReferenceResponse"/>
  </wsdl:message>
  <wsdl:portType name="ReferenceDirServicePortType">
    <wsdl:operation name="subscribeReference">
      <wsdl:input message="tns:SubscribeRequestMessage"/>
      <wsdl:output message="tns:SubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <wsdl:input message="tns:UnsubscribeRequestMessage"/>
      <wsdl:output message="tns:UnsubscribeResponseMessage"/>
      <wsdl:fault name="FaultMessageMessageId" message="tns:FaultMessageMessageId"/>
      <wsdl:fault name="FaultMessageTransactionId" message="tns:FaultMessageTransactionId"/>
      <wsdl:fault name="FaultMessageTimestamp" message="tns:FaultMessageTimestamp"/>
      <wsdl:fault name="FaultMessageError" message="tns:FaultMessageError"/>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <wsdl:input message="tns:GetServicesRequestMessage"/>
      <wsdl:output message="tns:GetServicesResponseMessage"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ReferenceDirServiceHTTPBinding" type="tns:ReferenceDirServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="subscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/subscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unsubscribeReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/unsubscribeReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="FaultMessageMessageId">
        <soap:fault name="FaultMessageMessageId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTransactionId">
        <soap:fault name="FaultMessageTransactionId" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageTimestamp">
        <soap:fault name="FaultMessageTimestamp" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="FaultMessageError">
        <soap:fault name="FaultMessageError" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServicesReference">
      <soap:operation soapAction="http://fidus.brussels/services/referencedir/getServicesReference"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ReferenceDirService_v1">
    <wsdl:port name="ReferenceDirService_v1" binding="tns:ReferenceDirServiceHTTPBinding">
      <soap:address location="http://fidus.brussels/services/referencedir/v1"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirMessages_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirMessages.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Messages
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/service/referencedir/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sub="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:uns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:ser="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:tns="http://fidus.brussels/service/referencedir/messages/v1">
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" schemaLocation="referenceDirSubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" schemaLocation="referenceDirUnsubscribeTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" schemaLocation="referenceDirGetServicesTypes_v1.xsd"/>
  <xs:element name="subscribeReferenceRequest" type="sub:SubscribeReferenceRequestType"/>
  <xs:element name="subscribeReferenceResponse" type="sub:SubscribeReferenceResponseType"/>
  <xs:element name="unsubscribeReferenceRequest" type="uns:UnsubscribeReferenceRequestType"/>
  <xs:element name="unsubscribeReferenceResponse" type="uns:UnsubscribeReferenceResponseType"/>
  <xs:element name="getServicesReferenceRequest" type="ser:GetServicesReferenceRequestType"/>
  <xs:element name="getServicesReferenceResponse" type="ser:GetServicesReferenceResponseType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirSubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Subscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/subscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/subscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="SubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="subscriptionRequest" type="req:SubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="subscriptionResponse" type="req:SubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/baseMessageTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/messages/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/v1" xmlns:nps="http://fidus.brussels/service/personservice/personservices/naturalPerson/v1" xmlns:tns="http://fidus.brussels/type/common/messages/v1">
  <!--Unformatted message Id-->
  <xsd:simpleType name="MessageIdType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--National Number of the person. Format depending on the Register-->
  <xsd:simpleType name="PersonNumberType">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9](([0][0-9])|([1][0-2]))(([0-2][0-9])|([3][0-1]))(([0-9]{2}[1-9])|([0-9][1-9][0-9])|([1-9][0-9]{2}))(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>National Register format</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([2][0-9])|([3][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Bis Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
      <xsd:pattern value="[0-9][0-9](([4][0-9])|([5][0-2]))(([0-2][0-9])|([3][0-1]))[0-9]{3}(([0-8][0-9])|([9][0-7]))">
        <xsd:annotation>
          <xsd:documentation>CBSS Register format: Ter Register</xsd:documentation>
        </xsd:annotation>
      </xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Request message context-->
  <xsd:complexType name="RequestMessageContextType">
    <xsd:annotation>
      <xsd:documentation>Message context block generated by the consumer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>Consumer must assign their own MessageId reference for the request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Timestamp when client sent request.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Response message context-->
  <xsd:complexType name="ResponseMessageContextType">
    <xsd:annotation>
      <xsd:documentation>MessageContext block generated by Fidus.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="messageId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique identifier generated by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="transactionId" type="tns:MessageIdType">
        <xsd:annotation>
          <xsd:documentation>A unique ID returned to the client for tracing purposes.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timestamp" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Time reply was sent by Fidus.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <!--Legal Context : the finality of the Privacy Commission-->
  <xsd:simpleType name="LegalContextType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="64"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="UserContextType">
    <xsd:annotation>
      <xsd:documentation>The user context defines information regarding the actual user performing a request.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="language" type="xsd:language" nillable="true">
        <xsd:annotation>
          <xsd:documentation>The preferred language of the actual user performing the request.
						This influences the language in which response elements are cast.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/exceptionTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://fidus.brussels/type/common/exceptions/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://fidus.brussels/type/common/exceptions/v1">
  <!--Basic error typed-->
  <xsd:complexType name="ExceptionsType">
    <xsd:sequence>
      <xsd:element name="exception" type="tns:ExceptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ExceptionType">
    <xsd:sequence>
      <xsd:element name="type" type="tns:ExceptionClassType"/>
      <xsd:element name="code" type="tns:ExceptionCodeType"/>
      <xsd:element name="source" type="tns:ExceptionSourceType"/>
      <xsd:element name="description" type="tns:ExceptionDescriptionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="ExceptionClassType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ERROR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="INFO"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionCodeType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionSourceType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExceptionDescriptionType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 07/04/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:complexType name="SubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionRequestType">
    <xs:sequence>
      <xs:element name="reference" type="tns:ReferenceType">
        <xs:annotation>
          <xs:documentation>Reference ; either a person or an enterprise number.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="endDate" type="xs:date" minOccurs="0">
        <xs:annotation>
          <xs:documentation>End date for subscription period.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscriptionResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string">
        <xs:annotation>
          <xs:documentation>Service execution status.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesResponseType">
    <xs:sequence>
      <xs:element name="name" type="xs:string" minOccurs="1"/>
      <xs:element name="operations" type="tns:Operations" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Operations">
    <xs:sequence>
      <xs:element name="operation" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceType">
    <xs:sequence>
      <xs:element name="personNumber" type="cme:PersonNumberType"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirUnsubscribeTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="UnsubscribeReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="unsubscriptionRequest" type="req:UnsubscriptionRequestType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UnsubscribeReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="unsubscriptionResponse" type="req:UnsubscriptionResponseType" minOccurs="0"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/referenceDirGetServicesTypes_v1.xsd</con:url><con:content><![CDATA[<!--==========================================================================
* File Name          : ReferenceDirSubscribeTypes.xsd
* Author             : Alexandre Carbenay
* Owner              : CIRB-CIBG
* Domain             : ISR
* Creation date      : 27/05/2015
* Last revision date : 27/05/2015
* Description        : WS ReferenceDir - Unsubscription Operation Types
* Status             : Draft
* Current Version    : v1
* Revision History	 : -
==========================================================================-->
<xs:schema targetNamespace="http://fidus.brussels/type/referencedir/requests/getservices/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cme="http://fidus.brussels/type/common/messages/v1" xmlns:exc="http://fidus.brussels/type/common/exceptions/v1" xmlns:req="http://fidus.brussels/type/referencedir/requests/v1" xmlns:tns="http://fidus.brussels/type/referencedir/requests/getservices/v1">
  <xs:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/common/exceptions/v1" schemaLocation="exceptionTypes_v1.xsd"/>
  <xs:import namespace="http://fidus.brussels/type/referencedir/requests/v1" schemaLocation="referenceDirTypes_v1.xsd"/>
  <xs:complexType name="GetServicesReferenceRequestType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:RequestMessageContextType"/>
      <xs:element name="legalContext" type="cme:LegalContextType"/>
      <xs:element name="getServicesRequest" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetServicesReferenceResponseType">
    <xs:sequence>
      <xs:element name="messageContext" type="cme:ResponseMessageContextType"/>
      <xs:element name="responses" type="tns:ResponsesType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Technical errors that occur when processing the request e.g. xs validation errors.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponsesType">
    <xs:sequence>
      <xs:element name="response" type="tns:ResponseType" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResponseType">
    <xs:sequence>
      <xs:element name="status" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="getServicesReferenceResponse" type="req:GetServicesResponseType"/>
      <xs:element name="exceptions" type="exc:ExceptionsType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Business error that occur when processing the request e.g. missing data.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/isr/git/parent/referencedirservice_1.0/ReferenceDirServiceGateway/src/main/resources/wsdl/referenceDir/1.0.0/messages/faultTypes_v1.xsd</con:url><con:content><![CDATA[<xsd:schema version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:cmn="http://fidus.brussels/type/common/messages/v1" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
  <xsd:import namespace="http://fidus.brussels/type/common/messages/v1" schemaLocation="baseMessageTypes_v1.xsd"/>
  <!--fault elements-->
  <xsd:element name="messageId" type="cmn:MessageIdType"/>
  <xsd:element name="transactionId" type="cmn:MessageIdType"/>
  <xsd:element name="timestamp" type="xsd:dateTime"/>
  <xsd:element name="error" type="errorType"/>
  <xsd:complexType name="errorType">
    <xsd:sequence>
      <xsd:element name="code" type="cmn:MessageIdType"/>
      <xsd:element name="description" type="xsd:string" minOccurs="0"/>
      <xsd:any namespace="http://schemas.xmlsoap.org/soap/envelope/" processContents="skip" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint></con:endpoints><con:operation id="312f45c1-9afa-4a5f-8119-e5d4fe428d15" isOneWay="false" action="http://fidus.brussels/services/referencedir/getServicesReference" name="getServicesReference" bindingOperationName="getServicesReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7d7af34a-7bf2-487a-bbfc-0a7fdbc99c9e" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/getservices/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getServicesReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:getServicesRequest>?</v11:getServicesRequest>
      </v1:getServicesReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/getServicesReference"/></con:call></con:operation><con:operation id="04f77d08-1546-46ed-8803-a95db3a43aa8" isOneWay="false" action="http://fidus.brussels/services/referencedir/subscribeReference" name="subscribeReference" bindingOperationName="subscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="13aeea11-79e8-45e7-ab63-6d93700b6a91" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/subscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:subscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:subscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:subscriptionRequest>
      </v1:subscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/subscribeReference"/></con:call></con:operation><con:operation id="c3d429ac-8c85-4a08-bb68-e8cf7c36abad" isOneWay="false" action="http://fidus.brussels/services/referencedir/unsubscribeReference" name="unsubscribeReference" bindingOperationName="unsubscribeReference" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="9b7cb6cd-42be-46e5-9456-ebda15a5e893" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://fidus.brussels/services/referencedir/v1</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/referencedir/messages/v1" xmlns:v11="http://fidus.brussels/type/referencedir/requests/unsubscribe/v1" xmlns:v12="http://fidus.brussels/type/common/messages/v1" xmlns:v13="http://fidus.brussels/type/referencedir/requests/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:unsubscribeReferenceRequest>
         <v11:messageContext>
            <v12:messageId>?</v12:messageId>
            <!--Optional:-->
            <v12:timestamp>?</v12:timestamp>
         </v11:messageContext>
         <v11:legalContext>?</v11:legalContext>
         <v11:unsubscriptionRequest>
            <v13:reference>
               <v13:personNumber>?</v13:personNumber>
            </v13:reference>
            <!--Optional:-->
            <v13:endDate>?</v13:endDate>
         </v11:unsubscriptionRequest>
      </v1:unsubscribeReferenceRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://fidus.brussels/services/referencedir/unsubscribeReference"/></con:call></con:operation></con:interface><con:testSuite id="056e6023-97ff-4cb3-9a22-e4e73aabb8c0" name="TEST"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6bb680fe-f5ef-43d8-8bb8-9ed7666bc998" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="c9d81e1c-4155-4f2c-9fba-4644a02cc61a" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="490e5e09-4b93-41a3-b384-e14c55f3b00f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d2f91842-e7c6-4513-aa44-399c50c0b5d4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8dfb785a-9cd6-45ad-ae97-ae3b062f4dc5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="8eec2662-a44b-4641-b1d8-9bf251b11eaf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="90e7ee38-99a8-4392-9d0a-7ffc8c0125ba" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="ab0f74a6-59eb-4a2a-9919-7ce436cee6c9" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="21339de2-c55a-40df-a3ee-c8ad02e373cf" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7140a2fd-88cc-4a64-91cf-f0158d51de4f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e1cd8067-8492-4fab-9bc6-feade19cd08a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a61e7826-4e92-4753-b59a-b2bbf4b06393" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="613ae1ec-cba6-468e-886d-74b10683b12a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91120406960</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="747cc0fc-686e-44b6-ae76-27faa944f3b6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e66f08a9-7397-4075-b8d9-f9f6896f605e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c9e025be-17ab-4ce4-adbe-fc49dbc7430c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c1faa05f-996a-4810-a62e-3c4f08b14930" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="ebedcb2a-6f10-4e40-a14f-eda8fb309938" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - External - Request" id="3f5c600f-587a-4951-9e71-833740113e7f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="ff2c6507-3330-4b1c-beb1-a79e4adf05b9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fd89ab5d-f58f-4ac9-a69a-f3cd95c94b92" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2f1cf97d-76bf-4a61-a285-a035e5123382" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="b7c07d80-85f2-4b57-bfb1-1baa7cfa1368" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - LB - Request" id="1c6cad5e-dcb1-4faf-85dd-51c422b4d1a1" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="79b69cfe-ebdc-4d9b-9b12-e78df1df2c34" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a3e8168b-4216-4376-8825-cbdbbf7423a5" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2510b513-7f95-4b2d-861a-d371831e3fb4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="d63e1f5d-6964-4a4f-aee3-97b9d95f5b99" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="cf2bbc0c-091f-443e-b54b-0390511186f0" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="840cba9a-ce74-4084-b5e7-3559a7514526" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cf772ef7-87d2-469b-bada-51490a2016e8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d6e1a14e-23df-4149-9f52-9301648527e8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="d8b8daf9-53bb-49f2-b680-477718189c37" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="b057e297-31fc-4ffa-9fcb-b02968cde1c9" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="843507c1-b14b-4de2-b366-2d57375a047a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b40b50eb-35d9-4a85-afa1-a05010fe29ec" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3dbf7492-c974-4c23-9689-dbd3c6da51ab" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="60022381-bdc3-4d1b-a805-029084997b05" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="f8a9eddb-22e2-4b87-970c-61fe5d8c5d6a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="7c98def9-ad8e-4e5b-a799-9934d3a49bb8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f7f246ac-9e66-4355-91e1-3a2ffce75126" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7982f866-ba79-40b3-92a6-847e067f7316" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="a6dd4904-dadb-4027-8c9d-0265dad812d7" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="ace196de-796d-4776-81c0-dd9a32786563" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d57084aa-0e74-4db0-bcfd-6839aadadec8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8da68425-309e-421b-b4d6-61d56ca04a2a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="35099d66-3f10-40be-8b81-ea34511e66a8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1b463e8-e09b-46c7-9bf5-882a04cbc448" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="4ccfc678-7838-4445-8f8c-38dd4190f822" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - External - Request" id="8a266a2b-d450-44c3-bb40-3b97fc869c4b" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d3951f59-cb14-45cd-b72a-9bd256f18e56" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a3cf00d9-bebe-475c-8cf7-45e2aa7264c2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fb2acb53-c88a-4443-8ed6-3a3c965623e3" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="fc02b509-c1da-4fb6-a467-99f10a5ff24e" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - LB - Request" id="15d4d27b-5b27-43ef-8f07-b52b60202349" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="31292ed5-acd0-4307-b09c-68bada8db8fa" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="934ce1e3-fddc-48b2-9c69-bedab16ec763" name="SOAP Response"/><con:assertion type="Schema Compliance" id="459002b7-4581-4320-aa50-8ed3348f087b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="876d6656-b3e7-4835-bfcb-fafafe04b3b1" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="3e6b6e1b-cc30-4507-8fe6-92f7a2b1a9aa" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="a94eaff8-053d-493a-9542-9653c256ed57" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="83b94bc8-009a-4a09-8713-4ff4193e0ffa" name="SOAP Response"/><con:assertion type="Schema Compliance" id="327de293-79af-4510-be1d-d757cbccfb93" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="29225793-d312-452d-a3d3-b78d5ead95b4" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="9c04f913-47f0-453f-96d3-cd61e44f128f" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="be52867e-392d-4980-b29c-c709533de778" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="75264b1e-5f67-4d38-a165-495a73370b63" name="SOAP Response"/><con:assertion type="Schema Compliance" id="aee43b14-6f83-4f12-9385-fef883ed470e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="a5fe5b89-90a6-4c5a-bd5d-d7b0bb27488c" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="7c09bd07-6be1-4300-bf1c-b18f2a541f5e" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="fec795dc-842a-4646-a592-e379d9edc63e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e1d1446e-3a03-4ff7-abc2-9cb37fbf650c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="785b76a9-be57-4c29-828e-950f3085cab6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="1d3d7950-8c01-492d-aed8-5627ca674eeb" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="69be4d9e-7ddd-41f9-9d5c-cf7fa42c9290" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2d059640-c067-4c3e-9070-ca19f4c5ec40" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e2c197d0-6a85-4c81-93bf-90c7d8387c1d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d391b872-9095-4277-820e-779479dbb3e4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="703a894e-dde2-47a6-87b7-7e6600b3cf52" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="a58b41fc-51c7-495f-9efc-5616a71dcb9e" name="testcase3 - Test - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - LB - Request" id="b98681c0-94f8-45e1-9729-bce0eee9e5dd" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://esb-security-gw.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b9be8e52-104b-44c9-bd70-d2bce65dd73a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="90aef8b8-4374-4eff-99c6-a87d2362e092" name="SOAP Response"/><con:assertion type="Schema Compliance" id="febe0b9b-6c6c-424a-a7bd-e1da1372ba4a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="17ecdb75-9eaf-40db-a8df-14d4c282218f" name="testcase3 - Test - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - External - Request" id="f1813e2e-0a79-4af9-b4a3-7600a4fd895d" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-test.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="88066df8-8c1a-407a-be26-cf6bb499160f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4f25ad3b-2081-43dd-9eac-6e22dcd4de04" name="SOAP Response"/><con:assertion type="Schema Compliance" id="cc388191-b5d9-41b7-a857-a542a1448983" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="abafdc79-0959-4774-9380-6f1b23ae48b4" name="testcase3 - Test - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1 - Request" id="e4d1251c-c712-4230-8c55-0e2a44d9190a" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="808cc62e-19b0-4327-9b0a-f9c612d1ff0e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="5e5fa7f4-4fcc-4a4b-b527-8381a2090b82" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a4379fc6-fb1c-4b6d-851e-4cab5b0b0961" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="f50d9c67-dd96-470d-b774-eb63d8f5f41e" name="testcase3 - Test - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2 - Request" id="e0635985-ae61-4024-9bfa-6770d79d8879" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="69072de5-47db-412e-86d7-178e7221fe50" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4595db6f-f895-4a8a-8696-b7e5db7d9712" name="SOAP Response"/><con:assertion type="Schema Compliance" id="951cfc2b-f2a1-4869-a298-c758381f72c7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a52c6dcb-489d-4a0d-a4c4-a6084c8e5521" name="testcase3 - Test - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker1New - Request" id="745914d9-07e5-4715-ad58-9a4c850106e5" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.45:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="96b12332-bdba-4861-98f2-3d57520b1f02" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="318d7018-db65-43fe-9275-45d8c2311584" name="SOAP Response"/><con:assertion type="Schema Compliance" id="b84cf34c-c50d-4c34-b32e-4f886bed73d7" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="07afd3d4-1186-49b2-b163-8beb16fba910" name="testcase3 - Test - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase3 - Test - Worker2New - Request" id="4e99631c-fec2-41db-929c-49a41054621c" outgoingWss="Outflow TEST"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.51:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2a1e8099-89eb-4996-bfb4-5d79a2631c78" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="28de2b41-8fd7-4c93-a436-72e7cbee5e32" name="SOAP Response"/><con:assertion type="Schema Compliance" id="bda2655b-6d24-472b-9c99-1b42c35d298e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="b0be5a0c-8614-47ae-9a9c-6591611e353a" name="STAG"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f1386c15-7f83-44e4-add7-035639954419" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="17534444-df87-4c16-8ac0-8bfb04f6e9d8" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="6b6dd249-ce2a-4671-86be-6a00bbcb27f3" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8590c597-f456-4449-8652-7cf7c962d983" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="109e8231-0b24-4ab7-97e2-085745d4b829" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4e5e3504-bfc2-404c-a166-7ee1089fa5a6" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="d0a2bb40-b2e1-4b93-94be-9301846dc63b" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="8fe90d2f-d380-4bdf-b59b-31767ff6d59d" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="dc772bb3-7a80-45c6-b0db-4305b5c7bd99" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="cd232035-6e8f-4a24-93f8-7aaf496dbd0a" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0aecf634-c399-446f-b115-5b2c85d0a235" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="3db21368-a153-47b3-aab1-9d4086853751" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="de029dc7-0091-4b79-9cf8-e91f9f0d93b5" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="630dfcb1-a1a4-48be-bd14-eedd58552aaf" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9648f0b8-69d8-4b20-a38a-cbbec37bd5a1" name="SOAP Response"/><con:assertion type="Schema Compliance" id="ad43ddae-def9-49b9-8e1c-0dc16ceeae0f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4f0e2776-5505-4e26-aaf4-6efcc2af49b1" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="67d7b878-8e52-4eec-a055-bcd7dbc5dd48" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="22655195-a879-4c6a-b7a5-88c0faf0d6a2" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b136f2b6-efb1-4e88-ab22-d5cb87133817" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a6e9349f-966b-40d6-9d72-e4950f56a635" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="e883b819-128b-44c2-9281-8e26c7d53926" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="7fd463fe-f89b-425f-acca-93061538cb6a" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="31b1aaef-2de5-4cbd-803c-0abd93117d51" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="4eba0a71-b056-4512-8219-27f1ee6a48ca" name="SOAP Response"/><con:assertion type="Schema Compliance" id="410945db-750e-4e8a-8e58-e5585800f6c5" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="45885b55-2b43-4154-94f5-7dc367da0f9c" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="f2bb8c8a-f45d-4301-8868-346d63bcc81b" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9f107d44-cf10-4189-ad1e-9953726dc551" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2611ddc0-7090-4c66-9dc9-4910f50da088" name="SOAP Response"/><con:assertion type="Schema Compliance" id="93c0960c-bd01-4ca1-b5da-a987a00e1a63" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2762e545-07ea-4ef4-a174-70f8ac9129a7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="c8abe079-6cab-4319-80d5-4f395c5ab97c" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - LB - Request" id="cee554e0-1625-4f6e-9cba-04b2cea21019" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="bdc3b59e-b291-4ab1-843d-ccce4768b205" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="fc7fa8c6-6aa4-406f-bd9b-174697121f7c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="33af82df-2ec6-4239-a044-50a5896ba55c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="b981e8a1-cb23-4e5c-9af6-556626af75c7" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="6231d14b-2cd8-4799-a096-6ae3eff1f2d7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5e91558d-bcf1-4948-a403-ccbc887e3059" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="182122af-6201-4450-8347-3cfa9630ea26" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4de1686e-0e8f-4cd0-aa96-f1e2b04a0fbb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="bf09117c-0353-4d2b-81ad-75f3e9ef0d30" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="42272af7-1993-4382-aa44-100746767c48" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="cd5c3189-bbd2-4798-a897-d3e1f331a37b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2e2de86d-ffb4-4d2f-aa57-2d9c93766898" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2eac4781-311f-401d-a33e-b30768bbbf27" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="d3f946b9-defb-403e-9eb8-8f00161907ad" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - External - Request" id="d5fb30b9-7243-4bc4-8fa8-def6c92c4198" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="4e9d471b-9940-4733-a618-84cf60f232e6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="efd4cdfa-2690-4e57-822c-3b4ec46c9d31" name="SOAP Response"/><con:assertion type="Schema Compliance" id="2fbb8889-c459-443d-9c82-b175baaa8d8b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="d958d394-8a2f-4e7d-b3f0-a15092e02fa2" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="1cc38afb-e175-4f91-ac9b-c6be832d9094" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f4830d64-8ef7-4302-af42-bd9420f50c85" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="86477022-3ce2-47ea-b45c-587f67fd32ca" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0587452b-c8e3-48c4-9884-52883a4adcba" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="36cc3c97-459b-4e83-b7bc-ff0450e0d64b" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="3575d80e-b826-45f5-8531-53019a7f7465" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9deef1d3-a819-4c7b-ac61-4ee1ddb59c87" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="c0ba8c8e-3b06-48b4-a4d3-78eb3bcf8954" name="SOAP Response"/><con:assertion type="Schema Compliance" id="0ae6ed0d-83ec-4592-9900-8ae4184f928e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="742e0817-3ddc-4761-90fa-1f1362dfb0cb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="25433eb3-7027-4369-be40-806020cf4873" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="d0e529ab-680e-467a-8b8a-a585af90f52e" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="2c4b1dd7-d9fa-4ab0-82ad-426dc5782ede" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="58285349-0002-42d2-aa4b-c65a5996ec96" name="SOAP Response"/><con:assertion type="Schema Compliance" id="87bfdbf9-c49e-4699-a6fa-636c3c776547" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="15b20a2f-4426-4be7-9934-977fdc5d5d2f" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="b2819abc-b6eb-4bbf-aa94-7fc03f48ab25" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="9f0e7ab2-69ea-48ef-bf16-a6ea82751baa" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f43f3c1f-13d8-4b67-9e1f-e910534fb688" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a18258d6-93d8-4469-90ab-9acf72e21792" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="24c42898-1f05-4c01-800e-9d915e7e21b4" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - External - Request" id="c5c0735a-784f-4d00-b6c6-cbdbb3e8eeb7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="5577e57b-4f85-4085-b7ea-08a107e8c9a0" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7cd4f41a-b1dd-4380-b544-7252cb1673c2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="96259364-f697-4ce7-b16a-0d220e5c7a41" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="63a90d0b-887e-45d3-a291-57aae1efe84e" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - LB - Request" id="ddd91239-8058-4507-8df8-d8e48072bfd7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.sta.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="da044ae5-610a-4b5b-8d3d-82bc896f7415" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="3861a5dc-6192-488d-b5f4-ec8bfc578b09" name="SOAP Response"/><con:assertion type="Schema Compliance" id="3fc00201-5bdf-4d39-a9f8-d583b6f79f13" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="dc08b53c-968a-485b-90f4-0870cbf7f54a" name="testcase4 - Staging - Worker1New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker1New - Request" id="5860db1c-aacc-432e-9d08-c92994edd84d" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.57:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="f3698f48-14ae-4d4b-b0ba-9e1e48015dea" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b23500e9-8a82-440c-8462-773a64dcac10" name="SOAP Response"/><con:assertion type="Schema Compliance" id="6f4213ae-0f5f-44b6-b5d1-a16f0cbcb3e9" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="46398c81-d48c-47a2-bae2-30c1b4a03f4b" name="testcase4 - Staging - Worker2New - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase4 - Staging - Worker2New - Request" id="6e54cb97-795d-480c-82c3-e044e4d18729" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.24.64:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="bce89c38-4265-4bf3-a675-96b04136cca0" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d61b880f-5663-4ab1-883d-87eb3e00ea8d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="9f705631-d5e7-48be-88cd-c942f554f746" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3ac306b2-146d-437a-a439-52283cdaf7c2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="20b390b5-f402-4a85-a9db-bcd79fc788f2" name="testcase4 - Staging - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - External - Request" id="fce4352d-e10a-4d59-9e84-be0604188690" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d5ffdac9-ebd5-4e22-95f5-fbe25a7640f7" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="bb0eec10-0667-435a-863a-bd6d97d4a22b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="311fd8e4-6fa3-43cc-bc07-c7968f03e483" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="a420f9bf-de23-4f8d-89d4-c6242778694d" name="testcase4 - Staging - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - LB - Request" id="5559aa3e-5a6b-4c7d-af47-ee49e958c5c6" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e66a87ae-9706-4e38-b020-42e57de8d173" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6debae49-129d-49a8-b26b-546e9316a6a2" name="SOAP Response"/><con:assertion type="Schema Compliance" id="770d34db-dfda-4053-883f-f6d65191113c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="94c814b0-6c1a-4d70-8cc9-9900e6ae5e4e" name="testcase4 - Staging - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker1 - Request" id="32344139-5221-4018-99b9-45acbaa6cab7" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="cf8fc0ef-6e37-43c3-978d-4fcfb1529d44" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2a9ef29e-5c97-4c46-baed-e0889537dccd" name="SOAP Response"/><con:assertion type="Schema Compliance" id="c84e0a04-24cc-4f40-b5bf-cde244ec0173" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="b04f7dfc-b234-4673-96ef-cb76b42cd87f" name="testcase4 - Staging - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase4 - Staging - Worker2 - Request" id="83bd225d-f028-4bef-877d-9fcb731a30b8" outgoingWss="Outflow STAG"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.irisnetlab.be/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b6ae3628-fb69-4756-b3fb-b56a6c66cca9" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="05d0488e-614e-45cf-beb3-1de08d544d7b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="827b7703-c35e-43f5-b973-da4d4f2b2c6c" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="e93e12be-b62d-4167-965d-b6d4bf6bd6d9" name="PROD"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1f316fa0-7022-4e9d-a507-f8272bb9deed" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="a45efa1a-2b75-4047-b9be-bce6036d821a" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="0bffc75b-0539-4ed8-ad0b-443513259cac" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1efa679b-4179-41c4-bab2-e8918f9a10a6" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e5b5c03f-f752-42fa-a460-8215fa43be3b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="91b2cf55-f6af-4e67-a790-929f5f759a6f" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="27c82dbe-b003-41bb-af54-aec6e7c1399e" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="7bdc1e1d-6da6-43fe-b458-028c7d58332a" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d4957c73-71f8-49df-a61c-59cc2e0a30ff" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="e44f66d9-7f8c-4d48-9fc4-c2893262a89d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fd9d66b3-df06-4303-9e3a-465219e49d35" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="e3b72aa6-788b-4784-8a5e-b67dd81283d7" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="26d160fe-fe98-4942-a7eb-0c12c5edb0be" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>89102413022</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e4805eb4-17f0-421a-86c2-2f4f8c1cf366" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a9a63da3-147c-4f3d-8a46-20a5a1f7970e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4d71af06-196e-4cc4-93d8-f382f1b6b72a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="60c90504-ff30-428a-bf82-d9f9b6232c78" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="605898d9-6a67-4810-8d42-c99517130b72" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>85081509931</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="57aaa873-3bf6-4585-9c5a-d00863789bb8" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f17475ac-3248-4ff8-97ef-c63cfd4d278b" name="SOAP Response"/><con:assertion type="Schema Compliance" id="a2a05cc7-9a9d-45e7-9d7d-dd391a59d042" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7a172b47-94a8-41dd-b2da-be762b46b79a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="00c29125-cbad-4d1f-bd1e-778de1f86f2a" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - External - Request" id="1cf7e66f-978c-46e4-8322-5e8dbc92c9e0" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1f86436f-a4b8-4c65-9c5b-c5a057c3bb7f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="068dc71f-020f-4f02-a9a4-6aea22bf20a4" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dd24803a-6b67-4c39-8ac2-b925bb15e926" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="987f4fc5-d1eb-4205-a422-4b0f74816cee" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - LB - Request" id="afc20daa-1f42-4acb-b989-4e31dbd02794" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="cff90c34-881f-4a84-9998-6194b9ac767f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="17b61beb-058d-4f07-811e-cc12cbb9993d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="30a914e7-14b9-49f7-9d3e-2e86c36661cb" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="c831cc4b-d4fa-4a14-a10c-95a8ad73df54" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="d3d476fa-7d86-40e7-844f-33c4ff959a36" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="47890c9f-4460-408f-b202-33b5c60101fb" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="394c8e7b-c787-45ab-9948-dd887573249f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="4df31f82-e2c2-488c-b01c-4b467cb3509e" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="81298d95-7e2a-4df8-bac2-2afa164e8e7d" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="8eeb90ad-5193-4c09-87dd-8e56c48f561e" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="eb397767-270e-4d17-bf48-c3373302c86f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7faaabc5-10ea-489a-8c4f-922fc193be3f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e3545c39-3bd6-4615-9c29-c0cbd53cd3bc" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8d366329-0be6-4b85-9230-c18c0433ed76" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="c28b4581-23b2-46d7-8fbb-c7120b99d283" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - External - Request" id="cdadea34-5b45-4be3-8ac5-226a6ae78e4c" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="c60db024-5359-4a49-9d84-86442de97345" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="8d859cb0-adcd-41be-8004-67699ec8c8fc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="1879fc23-9b8a-4675-9b1c-802aab92f4e8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="131cbe73-41a9-4536-ab4b-0916873469fa" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - LB - Request" id="ac0c6983-4ede-40a1-90eb-ef0931e3b269" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus-esb-sg.prd.srv.cirb.lan:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="8d911523-547e-40b0-887a-158fea2289a5" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="80e6bf8d-9d4b-48bb-82f9-e33594686337" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e6fc444e-40e3-478b-bb4d-768eef1b7a93" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="2392c58a-3743-4c88-8e7e-837acc02a50f" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="a59d3877-e974-4240-86d2-012eee8d1448" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.22:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="125a3f09-d2a9-48dd-b3c8-2e87e0e987ca" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="7f75a9fe-1124-4a5d-b1d3-634fdba4b0bc" name="SOAP Response"/><con:assertion type="Schema Compliance" id="df9854a3-aa87-4e84-ba6a-e1c149ebc085" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="ee63d062-5015-4f09-9299-a703f5e9f4f0" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="bd152c2e-e227-4991-a605-1ed5a3170e98" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.26.19:8443/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>Peters</lastName>
               <givenNameMatching>ALL_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1984-01-01</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="21406045-0eda-4dd5-8055-33e805c7a3c4" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="186c6e04-ef9c-4f9c-87fe-a1dcbf218cd3" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7a94f7ee-1221-424e-a9e1-b90beae387ea" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="46eb3930-f716-4ff2-8ff6-140f7b6d40ff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="45598029-14c2-477a-8655-2b098bb777ea" name="testcase5 - Prod - External - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - External - Request" id="fc8245fa-dc8f-458e-982e-ecc785d35b59" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="e0655c62-6cf0-4352-babd-fcb02c3a196a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="6d04548b-ccca-48b3-a45f-73ec4c8abf81" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7c2b57d2-122a-4319-980b-46a7d75b53a8" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="062ffb3c-8465-4252-b013-7e87757d3137" name="testcase5 - Prod - LB - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - LB - Request" id="cd5a99ed-8ba3-42d3-b4ac-70201f4d42bd" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="66b48b51-d6a0-406a-8cab-3cde1c8fba11" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="b6a8fda8-f554-464b-a06c-3473b3d1a8d8" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7fb4ed08-5427-4e08-aece-2e970d1a6c24" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="b3c1e6be-09cc-46bf-a22c-cad8169919a2" name="testcase5 - Prod - Worker1 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker1 - Request" id="09ab7c39-4e1c-48be-a06b-24f69bf39f5c" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0d9c8fd2-6fdf-4ba9-9551-444cfd05f057" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="1c44f1bf-3632-4004-9a70-776084e0f1fe" name="SOAP Response"/><con:assertion type="Schema Compliance" id="fb2684d7-41ef-4d3a-94c3-3e597f6fa624" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="4ea764cc-5569-44be-8fef-5a9c3f81c7dc" name="testcase5 - Prod - Worker2 - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase5 - Prod - Worker2 - Request" id="cddc501d-ffe0-402d-9567-61184d24d349" outgoingWss="Outflow PROD"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://fidus.sec.brussels/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>93430701886</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="551b6e7f-fa82-4dac-812f-ccb080850a6f" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="a477a23d-f94e-41df-a0aa-b7d746672d1c" name="SOAP Response"/><con:assertion type="Schema Compliance" id="dc970f1b-a30d-4efa-b15e-c32c57fac2e4" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="08dcf5a6-f30b-4e72-92c9-04cf5f646b52" name="DEV"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="d39fee26-3505-4948-a850-6f44d48703af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="055ce23d-9a9d-43c8-8f28-7f3b74a22af6" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="f5f1b283-8cf2-4ac0-ab31-30470c920f27" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>91040526866</v1:personNumber>
         </v1:request>
      </v1:getIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="75bda3b2-af9d-4931-9809-7aa8c6ab4570" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="f809c608-3ec1-473d-a2dd-b5be7dc5fb3f" name="SOAP Response"/><con:assertion type="Schema Compliance" id="7c469217-cd99-4822-95bf-7e951ded17bf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6c79c963-4522-4d59-bcc7-fbc9d60b71bf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonByAddress" searchProperties="true"><con:settings/><con:testStep type="request" id="27c02d21-55f1-4436-b13f-643ebeaadaa1" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - Dev - Request" id="88f7e3e0-1635-4e56-9b68-a048f90a3ef9" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="cc622bf4-2a7b-468f-8fe2-e8ec0c3b7d62" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="2b8d6d38-7677-4ae3-aa9d-d915319b3009" name="SOAP Response"/><con:assertion type="Schema Compliance" id="d12b72ed-a1a3-4520-9d2e-5d6e9b475ddd" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:testStep type="request" id="c135100a-a89e-44de-9d76-9bed4e6ef826" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonByAddress</con:operation><con:request name="testcase2 - DevNew - Request" id="fdc3b714-86c0-41ab-9903-e2647c823edc" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonByAddressRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <postalCode>2800</postalCode>
            <streetCode>1480</streetCode>
            <houseNumber>77</houseNumber>
         </v1:request>
      </v1:searchPersonByAddressRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="b51dd8a7-5dbc-491d-9163-5d6d72c4e546" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="9c098e9f-0c82-48fd-a1dd-8189cec771c6" name="SOAP Response"/><con:assertion type="Schema Compliance" id="629c3082-c658-4978-ad59-d627f587a61b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonByAddress"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="25454a3a-830d-40e8-b2b2-46199116f416" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="searchPersonPhonetically" searchProperties="true"><con:settings/><con:testStep type="request" id="7efec4ab-9696-4b4f-acf5-ebe1f1b1c29f" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - Dev - Request" id="9a0e3c63-e0dc-4546-9e60-d4534a73e72f" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="1b7e8d95-95aa-4cb5-a317-f7bf71f1423b" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="db304558-423c-4abc-a2f9-f8ef94a7068d" name="SOAP Response"/><con:assertion type="Schema Compliance" id="370bd7d8-7f69-4d79-9eb6-164e18fcdcc1" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:testStep type="request" id="e9242611-07eb-4e55-8214-c44cda12efac" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>searchPersonPhonetically</con:operation><con:request name="testcase2 - DevNew - Request" id="195b6a44-9d21-49b1-8aa1-f27bf923cd60" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:searchPersonPhoneticallyRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <name>
               <lastName>GENERATED</lastName>
               <givenName sequence="1">Stijn</givenName>
               <givenNameMatching>COMPLETE_FIRST_GIVENNAME</givenNameMatching>
            </name>
            <birth>
               <birthDate>1985-08-15</birthDate>
            </birth>
         </v1:request>
      </v1:searchPersonPhoneticallyRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="0c191ef3-2962-4267-9542-72da40ad597e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="aa458847-29e5-4a34-9ba3-e82ecb0e110e" name="SOAP Response"/><con:assertion type="Schema Compliance" id="5659febf-ddc4-486e-b393-ff5ff66768bf" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/searchPersonPhonetically"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b951efca-70d7-42bb-954e-4722a9a32f60" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getCBSSIdentity" searchProperties="true"><con:settings/><con:testStep type="request" id="ab949f6a-67f6-4944-ab3f-2e05d7637755" name="testcase2 - Dev - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - Dev - Request" id="2d57a654-16fa-48bc-ae30-229af0004cd4" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.61:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="d588620a-d317-4e65-bb41-d2f3788aff9a" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="d9e2e0d3-8213-414d-9fb6-c6b7b611ab82" name="SOAP Response"/><con:assertion type="Schema Compliance" id="00e143d2-43eb-4188-bbba-c73c078cec4a" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:testStep type="request" id="ddba2d99-dfb0-4abc-ab8e-5f7f15cf5e8c" name="testcase2 - DevNew - Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PersonServiceHTTPBinding</con:interface><con:operation>getCBSSIdentity</con:operation><con:request name="testcase2 - DevNew - Request" id="c3eaafb2-ded3-4ae2-b589-d5f3482ce4f6" outgoingWss="Outflow DEV"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://192.168.36.205:8243/services/PersonService_v1.0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:v1="http://fidus.brussels/service/personservice/messages/v1" xmlns:v11="http://fidus.brussels/type/common/messages/v1">
   <soapenv:Header/>
   <soapenv:Body>
      <v1:getCBSSIdentityRequest>
         <v1:messageContext>
         	  <v11:messageId>${=import static java.util.UUID.randomUUID; uuid = randomUUID() as String}</v11:messageId>
            <v11:timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS").format(new Date())}</v11:timestamp>
         </v1:messageContext>
         <v1:legalContext>ServiceIntegrator</v1:legalContext>
         <v1:request>
            <v1:personNumber>12003001507</v1:personNumber>
         </v1:request>
      </v1:getCBSSIdentityRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion" id="328f2638-fc20-4447-8745-4e16dd4eee1e" name="Not SOAP Fault"/><con:assertion type="SOAP Response" id="36929bcf-63ee-4949-af95-0481cd83fc28" name="SOAP Response"/><con:assertion type="Schema Compliance" id="e7e146c2-8eda-4e72-b092-459c19eef05b" name="Schema Compliance"><con:configuration/></con:assertion><con:wsaConfig action="http://fidus.brussels/services/personservice/getCBSSIdentity"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>outgoingWSSName</con:name><con:value>OutFlow_TEST</con:value></con:property><con:property><con:name>inComingWSSName</con:name><con:value>InFlow_TEST</con:value></con:property><con:property><con:name>projectName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>keystorepassword</con:name><con:value>wso2carbon</con:value></con:property><con:property><con:name>keystorePath</con:name><con:value>/data/wso2/keystores</con:value></con:property><con:property><con:name>endpointId</con:name><con:value>worker1</con:value></con:property><con:property><con:name>env</con:name><con:value>test</con:value></con:property><con:property><con:name>wsdlServiceName</con:name><con:value>PersonService</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>fidus</con:value></con:property><con:property><con:name>userName</con:name><con:value>testUser</con:value></con:property><con:property><con:name>password</con:name><con:value>9iQK8CGRYqianaRK8iVnTiRxv9XtLJ</con:value></con:property><con:property><con:name>version</con:name><con:value>1.0</con:value></con:property></con:properties>
  <con:wssContainer>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:crypto><con:source>data/wso2/keystores/user-rajarshi.jks</con:source><con:password>test@fidus01</con:password><con:type>KEYSTORE</con:type></con:crypto><con:outgoing><con:name>Outflow TEST</con:name><con:entry type="Signature" username="testuser-test.fidus.brussels" password="test@fidus01"><con:configuration><crypto>user-rajarshi.jks</crypto><keyIdentifierType>3</keyIdentifierType><signatureAlgorithm/><signatureCanonicalization/><useSingleCert>true</useSingleCert><digestAlgorithm/><customTokenValueType/><customTokenId/></con:configuration></con:entry><con:entry type="Timestamp"><con:configuration><timeToLive>300000</timeToLive><strictTimestamp>true</strictTimestamp></con:configuration></con:entry></con:outgoing><con:outgoing><con:name>Outflow STAG</con:name></con:outgoing><con:outgoing><con:name>Outflow PROD</con:name></con:outgoing><con:outgoing><con:name>Outflow DEV</con:name></con:outgoing></con:wssContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/><con:sensitiveInformation/>
</con:soapui-project>